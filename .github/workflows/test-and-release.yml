name: Release

on: [push, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🧳
        uses: actions/checkout@v4

      - name: Setup PNPM ⚙️
        uses: AkashRajpurohit/.github/.github/actions/setup-pnpm@main
        with:
          node_version: 18
          pnpm_version: 8

      - name: Install dependencies ⏬
        run: pnpm install --no-frozen-lockfile

      - name: Build ⏰
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Test 🔫
        run: pnpm test:coverage

      - name: Report Coverage 📝
        if: always() # Also generate the report if tests are failing
        uses: davelosert/vitest-coverage-report-action@v2

      - name: Get Coverage for badge 🔢
        run: |
          COVERAGE="$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')"
          echo "COVERAGE=$(echo ${COVERAGE})" >> $GITHUB_ENV

      - name: Create coverage badge ✍🏽
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 7336f237b82d9581c5f52405f87db531
          filename: snowflake-id-coverage.json
          label: Code Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: vitest

      - name: Upload Test Results ⏫
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  release:
    # Release only when code is pushed to main branch
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout 🧳
        uses: actions/checkout@v4

      - name: Setup PNPM ⚙️
        uses: AkashRajpurohit/.github/.github/actions/setup-pnpm@main
        with:
          node_version: 18
          pnpm_version: 8

      - name: Install dependencies ⏬
        run: pnpm install --no-frozen-lockfile

      - name: Build ⏰
        run: pnpm build
        env:
          NODE_ENV: production
          
      - name: Release 🚀
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm semantic-release
